# Rime schema
# encoding: utf-8

schema:
  schema_id: flypy_xhfast
  name: 飞鹤快拼
  version: "0.5"
  author:
    - boomker
  description: |
    小鹤双拼+辅助码
  dependencies:
    # - flypy_phrase    # 中文词库 - 现代汉语词典 & 清华开源词库
    - melt_eng        # 英文单词&词组 - 简明英汉词典(增强版)
    - easy_en
    # - emoji
    # - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [中文, 西文]
  - name: ascii_punct
    reset: 0
    states: [。, .]
  - name: emoji
    reset: 1
    states: [💀, 😄]
  - name: full_shape
    states: [半角, 全角]
  - name: simplification
    states: [简体, 繁体]
  - options: ["utf8", "gbk", "gb2312"]    # 字符集选单
    reset: 0                              # 默认 UTF8
    states:
      - UTF-8
      - GBK
      - GB2312

engine:
  processors:
    - lua_processor@launcher_processor
    - lua_processor@pair_symbols_processor
    - lua_processor@select_char_processor
    - lua_processor@expand_idiom_abbr_processor
    - lua_processor@cold_word_drop_processor
    - lua_processor@word_append_space_processor
    - lua_processor@top_word_autocommit_processor
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - affix_segmentor@mkst
    - affix_segmentor@chinese_number
    - affix_segmentor@easy_en_simp
    - affix_segmentor@laTeX_formula
    - affix_segmentor@dbpy_flypy_help
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - script_translator
    # - table_translator@emojis
    # - table_translator@flypy_phrase
    - table_translator@mkst                           # 精准造词
    - table_translator@custom_phrase
    - table_translator@idiom_phrase
    - table_translator@melt_eng
    - table_translator@easy_en_simp                   # oy 触发单词输入
    - table_translator@dbpy_flypy_help                # oh 触发
    - lua_translator@commit_history_translator        # hisz 触发
    - lua_translator@datetime_translator              # date, rq, week, time 触发
    - lua_translator@launcher_translator              # jj 快捷命令 触发
    - lua_translator@lunar_translator                 # cnl/znl 触发
    - lua_translator@en_custom_translator             # `尾触发
    - lua_translator@laTex_translator                 # tf 触发
    - lua_translator@number_translator                # n/ 触发
    - lua_translator@engword_autocaps_translator      # 大写字母开头触发
    - lua_translator@expand_idiom_abbr_translator
    - lua_translator@top_word_autocommit_translator
  filters:
    - simplifier
    - simplifier@emoji
    - simplifier@transcription
    - lua_filter@fly_fixed_filter
    - lua_filter@charset_withEmoji_filter
    - lua_filter@word_append_space_filter
    - lua_filter@engword_autocaps_filter
    - lua_filter@top_word_autocommit_filter
    - lua_filter@long_word_up_filter
    - lua_filter@cold_word_drop_filter
    - uniquifier                                      #  只能放到最后!

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA_[`/
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  delimiter: " '"
  # max_code_length: 8
  # auto_select: true
  # auto_select_pattern: '^\w+\[\w{2}$'
  algebra:
    - erase/^ng\[kx$/             # 响应超级简拼，取消「嗯 ng」的独占
    - erase/^ng\[kk$/             # 响应超级简拼，取消「唔 ng」的独占
    - erase/^n\[\w+$/             # 响应超级简拼，取消「嗯 n」的独占
    - erase/^m\[\w+$/             # 响应超级简拼，取消「呒 m」的独占
    - erase/^m\[\w+$/             # 响应超级简拼，取消「呣 m」的独占

    ## 字库编码到输入码的转换规则
    - derive/^(\w+)\[(\w)(\w)$/$1\[$2$3/        # Flypy: AB[CD
    - derive/^(\w+)\[(\w)(\w)$/$1\[$2/          # Flypy: AB[C
    - derive/^(\w+)\[(\w)(\w)$/$1/              # Flypy: AB

    ## 音码优化规则,不影响原始音码规则, 属于全新自创
    - derive/^(j)n/$1c/
    - derive/^([jyn])t/$1d/                     # t --> d
    - derive/^([bjlmnx])p/$1e/                  # p --> e
    - derive/^([djlnx])q/$1f/                   # q --> f
    - derive/^q([biklmnsxy])/f$1/
    - derive/^qq/fz/
    - derive/^qu/fs/
    - derive/^qr/fo/
    - derive/^qp/fe/
    - derive/^qt/fd/
    - derive/^dp/dl/                            # dp --> dl
    - derive/^p([okifuhjbnmg])/e$1/
    - derive/^([jkiu])y/$1w/                    # [jk]y --> [jk]w
    - derive/^y([ikb])/w$1/                     # y[ik] --> w[ik]
    - derive/^y([asderzc])/o$1/
    - derive/^yu/ov/
    - derive/^yy/ow/
    - derive/^yj/oj/
    - derive/^yh/on/
    - derive/^hy/hw/
    - derive/^t([wy])/dw/                       # t[wy] --> dw
    - derive/^t([erp])/df/                      # t[er] --> df
    - derive/^tg/og/                            # tg --> og
    - derive/^tk/rk/                            # tk --> rk
    - derive/^tm/rm/                            # tm --> rm
    - derive/^rg/rm/
    - derive/^rf/rn/
    - derive/^gf/gn/
    - derive/^gr/gm/
    - derive/^gw/gi/
    - derive/^gy/gi/
    - derive/^xt/xd/
    - derive/^xl/xh/
    - derive/^xy/xo/
    - derive/^jx/ja/
    - derive/^jb/jo/
    - derive/^jm/jz/
    - derive/^zw/zk/
    - derive/^vg/vk/
    - derive/^vf/vn/
    - derive/^vr/vm/
    - derive/^ly/nw/
    - derive/^bj/aj/
    - derive/^bu/au/
    - derive/^bh/sb/
    - derive/^b([fgknm])/s$1/                   # b[fgknm] --> s[fgknm]
    - derive/^mb/ms/
    - derive/^mh/mx/
    - derive/^mk/me/
    - derive/^mo/mr/
    - derive/^mu/mv/

grammar:
  language: zh-hans-t-essay-bgw

translator:
  dictionary: flypy_xhfast
  # enable_encoder: true
  enable_user_dict: true
  encode_commit_history: true       # 上屏历史记录
  contextual_suggestions: true      # 开启八股文, 上下文联想
  sentence_over_completion: true
  initial_quality: 1.3
  spelling_hints: 1                 # `0`: 关闭单字编码提示
  comment_format:
    - xform/^\w+[[](\w+)$/~$1/      ## 单字编码提示只显示辅助码部分
    - xform/^~\w+\s.*$//            ## 单字编码提示只显示辅助码部分
    # - xform/^\w+[[](\w+)\s\w+[[](\w+)$/~$2/      ## 单字编码提示只显示辅助码部分
    # - xform/^\w+\s.*$//                          ## 单字编码提示只显示辅助码部分

mkst:
  __include: /translator            # 复用上面的翻译器,日志中带有 warning
  enable_sentence: true
  tips: "〔精准造词〕"
  tag: mkst

custom_phrase:                      # 自定义短语, 包含固顶字词, 快捷启动 APP 名称
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 9

idiom_phrase:                       # 成语, 俗语缩写, 实现简拼
  dictionary: ""
  user_dict: idiom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 0.8

melt_eng:                           # 英文单词
  enable_encoder: false
  encode_commit_history: false
  enable_sentence: false
  enable_completion: true           # 是否启用英文输入联想补全
  enable_user_dict: false
  dictionary: melt_eng
  initial_quality: 1.1

flypy_phrase:
  enable_encoder: false
  encode_commit_history: false
  enable_sentence: false
  enable_user_dict: false
  enable_completion: true
  dictionary: flypy_phrase
  initial_quality: -1

punctuator:
  import_preset: symbols
  full_shape:
    __include: default:/punctuator/full_shape         # 从 default.yaml 导入配置
  half_shape:
    ",": {commit: "，"}
    ".": {commit: "。"}
    ";": {commit: "；"}
    '"': {pair: ['‘', '’']}      ## 添加注释后：恢复默认引号
    "'": {pair: ['“', '”']}      ## 添加注释后：恢复默认引号
    "#": "#"
    "=": "="
    "<": [《, "<", ‹, 〈, «, ⟨, ˂, ˱]
    ">": [》, ">", ›, 〉, », ⟩, ˃, ˲]
    "/": ["/", ／, ÷]
    '\': [、, '\', ＼]
    "|": [·, ・, "|", ｜, "§", "¦", "‖", ︴]
    "`": ["`", "```", ‵, ‶, ‷, ′, ″, ‴, ⁗]
    "~": ["~", ～, ˜, ˷, ⸯ, ≈, ≋, ≃, ≅, ≇, ∽, ⋍, ≌, ﹏, ﹋, ﹌, ︴]
    "%": ["%", ％, "°", "℃", ‰, ‱, ℉, ℅, ℆, ℀, ℁, ⅍]
    # '^': [^, ……]
    # "$": [￥, "$", "€", "£", "¥", "¢", "¤", ₩]
    "$": "￥"
    "*": ["*", ＊, ·, ・, ×, ※, ❂, ⁂, ☮, ☯, ☣]
    "(": [（, '(']
    ")": [）, ')']
    "[": [「, 【, 〔, ［, 〚, 〘]
    "]": [」, 】, 〕, ］, 〛, 〙]
    "{": [『, 〖, ｛]
    "}": [』, 〗, ｝]
  symbols:
    __include: symbols_custom:/symbols
    ## 制表符
    "/zb": [┌, └, ┐, ┘, ─, │, ├, ┤, ┬, ┴, ┼, ┏, ┗, ┓, ┛, ━, ┃, ┣, ┫, ┳, ┻, ╋]

key_binder:
  import_preset: default
  bindings:
    - {when: has_menu, accept: semicolon, send: 2}
    - {when: has_menu, accept: apostrophe, send: 3}         ## 单引号用于第3候选
    - {when: has_menu, accept: "Control+0", toggle: simplification}
    - {when: composing, accept: bracketleft, send: "["}     ## `[`引导辅助码
    - {when: composing, accept: Control+o, send: Shift+Left}
    - {when: composing, accept: Control+i, send: Shift+Right}
    - {when: composing, accept: Control+w, send: Control+BackSpace}
    # - { when: composing, accept: Tab, send: '[' }         ## 取消注释后: tab引导辅助码
    # - { when: composing, accept: Control+m, send: Return }
    # - { when: always, accept: Control+1, send_sequence: 'HelloWorld' }

recognizer:
  # import_preset: default
  patterns:
    punct: "^/([0-9]0?|[A-Za-z]+)$"
    chinese_number: "^n/[0-9.]+$"
    mkst: "^[a-z]+[[][a-z[[]]*$"        # `[` 引导 精准造词
    ## associate schemes:
    reverse_lookup: "^oq[a-z]*?$"       # 部件拆字，部件使用小鹤双拼编码
    dbpy_flypy_help: "^oh.*$"
    easy_en_simp: "^oy[a-z]*$"
    laTeX_formula: "^tf(.*)$"
    # emojis: "^of[a-z]*'?$"

menu:
  page_size: 5

transcription:
  option_name: simplification
  opencc_config: s2t.json
  tips: none
  # tags: abc
  excluded_types: [reverse_lookup]

emoji:
  opencc_config: emoji.json
  option_name: emoji

# emojis:
#   tag: emojis
#   dictionary: emoji
#   enable_completion: true
#   prefix: "of"
#   suffix: "'"
#   tips: " Emoji"

chinese_number:
  tag: chinese_number
  # prefix: "n/"
  tips: " 中文数字简繁大小写 "

dbpy_flypy_help:
  dictionary: ""
  user_dict: dbpy_flypy_help
  tag: dbpy_flypy_help
  prefix: "oh"
  tips: "小鹤双拼查键"
  db_class: stabledb
  enable_completion: true
  enable_sentence: false
  initial_quality: 1

easy_en_simp:
  tag: easy_en_simp
  dictionary: easy_en
  enable_completion: true
  enable_sentence: false
  enable_user_dict: false
  prefix: "oy"
  suffix: "'"
  tips: "英文单词(可去元音)"
  spelling_hints: 9
  comment_format:
    - xform/^.+$//

reverse_lookup:
  dictionary: flypy_chaizi
  enable_completion: true
  prefix: "oq"
  suffix: "'"
  tips: 〔部件组字〕      # 〔筆畫〕
  preedit_format:
  # - xlit/hspnz/一丨丿丶乙/

laTeX_formula:
  tag: laTeX_formula
  prefix: "tf"
  tips: " TeX 公式"

history:                  # 上屏历史记录
  tag: history
  history_num_max: 10
  size: 10
  input: "hisz"
  initial_quality: 1000
  excluded_type: "punct"
